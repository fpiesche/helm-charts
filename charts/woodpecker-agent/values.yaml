---
nameOverride: woodpecker-agent
fullnameOverride: woodpecker-agent

imagePullSecrets: []

replicaCount: 2
image:
  repository: florianpiesche/woodpecker-agent
  # tag:
  pullPolicy: IfNotPresent

# rpcSecret: ""

extraEnv: {}
extraSecret: {}

sidecar:
  image:
    repository: docker
    tag: 19.03.5-dind
    pullPolicy: IfNotPresent
  extraEnv: {}
  extraSecret: {}
  resources:
    limits:
      cpu: 1
      memory: 1Gi
  extraVolumeMounts: []
  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

terminationGracePeriodSeconds: 3600

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

## Add extra annotations to the Kubernetes runner pods here.
##
podAnnotations: {}

## Using topology spread constraints, you can ensure that there is at least one agent
## pod for each topology zone, e.g. one per arch for for multi-architecture clusters
## or one for each region for geographically distributed cloud-hosted clusters.
## Ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/
topologySpreadConstraints: []
# - maxSkew: 1
#   topologyKey: "beta.kubernetes.io/arch"
#   whenUnsatisfiable: "DoNotSchedule"
#   labelSelector:
#     matchLabels:
#       "app.kubernetes.io/name": woodpecker-agent

service:
  type: ClusterIP
  port: 3000

resources: {}
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

## If you'd like to force the agents to run on a specific node or set of nodes,
## set a selector here.
nodeSelector: {}

tolerations: []

affinity: {}

## If you'd like to make additional files or volumes available to the agent, declare additional
## Volumes here per the Pod spec's "volumes" section.
## Ref: https://kubernetes.io/docs/concepts/storage/volumes/
extraVolumes: []

## If you have declared extra volumes, mount them here, per the Pod Container's
## "volumeMounts" section.
extraVolumeMounts: []

## If you'd like to provide your own Kubernetes Secret object instead of passing your values
## in un-encrypted, pass in the name of a created + populated Secret in the same Namespace
## as the agents. All secrets within this configmap will be mounted as environment
## variables, with each key/value mapping to a corresponding environment variable on the
## agent.
##
extraSecretNamesForEnvFrom: []
# - woodpecker-secrets

env:
  ## The hostname/IP (and optionally the port) for the Woodpecker server
  WOODPECKER_SERVER: woodpecker:9000
